/*
 * timer1.h
 *
 *  Created on: 30 Oct 2022
 *      Author: EES
 */

#ifndef TIMER1_H_
#define TIMER1_H_
#include "std_types.h"


/*******************************************************************************
 *                                Definitions                                  *
 *******************************************************************************/
typedef enum{
	F_CPU ,F_CPU_1,F_CPU_8,F_CPU_64 , F_CPU_256, F_CPU
}Timer1_Prescaler;

typedef enum {
	NORMAL_MODE , COMPARE_MODE = 4
}Timer1_Mode;

typedef struct {
 uint16 initial_value;
 uint16 compare_value; // it will be used in compare mode only.
 Timer1_Prescaler prescaler;
 Timer1_Mode mode;
} Timer1_ConfigType;


/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/

/*
 * Function to initialize the Timer driver
 *Inputs: pointer to the configuration structure with type
 *Timer1_ConfigType */
void Timer1_init(const Timer1_ConfigType * Config_Ptr);

/* Function to disable the Timer1 */
void Timer1_deInit(void);

/*
 *  Function to set the Call Back function address.
 *Inputs: pointer to Call Back function.
 */

void Timer1_setCallBack(void(*a_ptr)(void));

#endif /* TIMER1_H_ */
